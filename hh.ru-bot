coverLetterText = 'Добрый день! Рассмотрите, пожалуйста!'
wait = (ms = 100) => new Promise(res=>setTimeout(res, ms))

errors = []
witCoverLetter = []
alreadyResponded = []

addedToBlacklist = []
alreadyAddedToBlacklist = []

log = (...args) => console.log({ errors, witCoverLetter, alreadyResponded, addedToBlacklist, alreadyAddedToBlacklist }, ...args)

runTasks = async () => {
    
    const items = document.querySelectorAll('.serp-item')
    for (const [index, item] of items.entries()) {
        item.scrollIntoView({behavior: 'smooth', block: "center"});
        item.style.boxShadow = "0 0 5px red";

        const jobTitle = item.querySelector('.serp-item__title')?.innerText
        const jobHref = item.querySelector('.serp-item__title')?.href

        const target = item.querySelector('.bloko-button_kind-success')
        
        if (target.innerText === 'Respond') {
            log(index, 'RESPOND', item)
            
            target.click()
            await wait(1000)

            const coverLetter = document.querySelector('[data-qa=vacancy-response-popup-form-letter-input]')

            if(coverLetter) {
                coverLetter.value = coverLetterText
                witCoverLetter.push({ title: jobTitle, href: jobHref })
            }
            
            
            document.querySelector('.bloko-modal-footer .bloko-button_kind-primary').click()

            await wait(1111)
            
            const errorText = document.querySelector('.vacancy-response-popup-error')?.innerText
            if (errorText) {
                errors.push({ title: jobTitle, href: jobHref, error: errorText })
                document.querySelector('[data-qa=vacancy-response-popup-close-button]')?.click() // close modal
                continue
            }
            
        } else {
            alreadyResponded.push({ title: jobTitle, href: jobHref })
            log(index, 'already RESPONDED', item)
        }

        

         await wait(100)

        const blacklist = item.querySelector('[data-qa=vacancy__blacklist-show-add]')
        
        if(blacklist) {
            blacklist.click()    
            await wait(100)
            document.querySelector('[data-qa=vacancy__blacklist-menu-add-vacancy]').click()
            
            addedToBlacklist.push({ title: jobTitle, href: jobHref })
            log(index, 'TO BLACK LIST', item)
            
        } else {
            alreadyAddedToBlacklist.push({ title: jobTitle, href: jobHref })
            log(index, 'already blacklisted', item)
        }
    
        await wait(1000)
        item.style.boxShadow = "";
    }

    const next = document.querySelector('[data-qa="pager-next"]')
    if(next) {
        next.click()
        await wait(4000)
        runTasks()
        log('GO TO NEXT PAGE')
    }

}

runTasks()
